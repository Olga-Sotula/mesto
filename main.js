(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._url="".concat(e,"/").concat(n),this._header=r}var n,r;return n=t,(r=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._url,"/users/me"),{headers:this._header}).then((function(t){return e._handleResponse(t)}))}},{key:"updateUserProfile",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._header,body:JSON.stringify(e)}).then((function(e){return t._handleResponse(e)}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._header,body:JSON.stringify({avatar:e})}).then((function(e){return t._handleResponse(e)}))}},{key:"getCards",value:function(){var e=this;return fetch("".concat(this._url,"/cards"),{headers:this._header}).then((function(t){return e._handleResponse(t)}))}},{key:"addCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._header,body:JSON.stringify(e)}).then((function(e){return t._handleResponse(e)}))}},{key:"updateLike",value:function(e,t){var n=this;return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:t,headers:this._header}).then((function(e){return n._handleResponse(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._header}).then((function(e){return t._handleResponse(e)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t,this._container=document.querySelector(n)}var t,r;return t=e,(r=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"setItem",value:function(e){this._container.append(e)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._titleElement=document.querySelector(t.title),this._subtitleElement=document.querySelector(t.subtitle),this._avatarElement=document.querySelector(t.avatar)}var t,n;return t=e,(n=[{key:"setId",value:function(e){this._id=e}},{key:"getId",value:function(){return this._id}},{key:"setAvatar",value:function(e){this._avatarElement.src=e}},{key:"getUserInfo",value:function(){return{name:this._titleElement.textContent,description:this._subtitleElement.textContent}}},{key:"setProfile",value:function(e){this._titleElement.textContent=e.name,this._subtitleElement.textContent=e.description}},{key:"setInfo",value:function(e){this.setId(e._id),this.setProfile({name:e.name,description:e.about}),this.setAvatar(e.avatar)}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._id=t._id,this._name=t.name,this._link=t.link,this._likes=t.likes||[],this._ownerId=t.owner._id,this._deleteEnabled=!1,this._cardSelector=n,this._element=null,this._elementImage=null,this._elementTitle=null,this._elementLikeButton=null,this._elementLikesCount=null,this._elementRemove=null,this._handleCardClick=r,this._handleCardLike=o,this._handleCardDelete=i}var t,n;return t=e,(n=[{key:"getId",value:function(){return this._id}},{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".photo").cloneNode(!0)}},{key:"isUserLiked",value:function(e){return this._likes.some((function(t){return e===t._id}))}},{key:"_renderLikes",value:function(e){this._elementLikeCount.textContent=this._likes.length,this.isUserLiked(e)?this._elementLikeButton.classList.add("photo__like-button_active"):this._elementLikeButton.classList.remove("photo__like-button_active")}},{key:"_setEventListeners",value:function(){var e=this;this._elementLikeButton.addEventListener("click",(function(){e._handleCardLike(e)})),this._elementRemove.addEventListener("click",(function(){e._handleCardDelete(e)})),this._elementImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"generateCard",value:function(e){return this._deleteEnabled=this._ownerId===e,this._element=this._getTemplate(),this._elementTitle=this._element.querySelector(".photo__title"),this._elementLikeButton=this._element.querySelector(".photo__like-button"),this._elementLikeCount=this._element.querySelector(".photo__like-count"),this._elementRemove=this._element.querySelector(".photo__rm"),this._elementImage=this._element.querySelector(".photo__img"),this._elementTitle.textContent=this._name,this._elementImage.src=this._link,this._elementImage.alt=this._name,this._renderLikes(e),this._elementRemove.hidden=!this._deleteEnabled,this._elementRemove.disabled=!this._deleteEnabled,this._setEventListeners(),this._element}},{key:"updateLikes",value:function(e,t){this._likes=e||[],this._renderLikes(t)}},{key:"deleteElement",value:function(){this._element.remove(),this._element=null}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var l=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=n.inputSelector,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._formElement=t,this._inputs=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_hasInvalidInput",value:function(){return this._inputs.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputs)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".popup__error_type_".concat(e.name));e.classList.add(this._inputErrorClass),n.classList.add(this._errorClass),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".popup__error_type_".concat(e.name));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputs.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputs.forEach((function(t){e._hideInputError(t)}))}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__close"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"_handleOverlayClick",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._closeButton.addEventListener("click",(function(){e.close()})),this._popup.addEventListener("mousedown",(function(t){e._handleOverlayClick(t)}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},_.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}function y(e,t){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},y(e,t)}function v(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function m(e){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},m(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return v(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,n))._image=r._popup.querySelector(e),r._caption=r._popup.querySelector(t),r}return t=u,(n=[{key:"open",value:function(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,_(m(u.prototype),"open",this).call(this)}}])&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=w(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},E.apply(this,arguments)}function w(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function O(e,t){if(t&&("object"===g(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._form=n._popup.querySelector(".popup__form"),n._submitButton=n._popup.querySelector(".popup__submit"),n._submitText=n._submitButton.textContent,n._inputList=n._form.querySelectorAll(".popup__input"),n._handleSubmit=e,n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setFormValues",value:function(e){this._inputList.forEach((function(t){t.value=e[t.name]}))}},{key:"getFormName",value:function(){return this._form.getAttribute("name")}},{key:"setSubmitText",value:function(){this._submitButton.textContent=this._submitText}},{key:"setSavingText",value:function(){this._submitButton.textContent="Сохранение ..."}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())})),E(C(u.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._form.reset(),E(C(u.prototype),"close",this).call(this)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=R(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},I.apply(this,arguments)}function R(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function T(e,t){return T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},T(e,t)}function B(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._form=n._popup.querySelector(".popup__form"),n._handleSubmit=e,n}return t=u,(n=[{key:"open",value:function(e){this._card=e,I(x(u.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._card)})),I(x(u.prototype),"setEventListeners",this).call(this)}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(f);function A(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var V=document.querySelector(".profile__avatar-button"),U=document.querySelector(".profile__edit-button"),D=document.querySelector(".profile__add-button"),N=new t("https://mesto.nomoreparties.co/v1","cohort-43",{authorization:"94d6e346-3932-4dc4-bc64-13113fb0f452","Content-Type":"application/json"}),F=new i({title:".profile__title",subtitle:".profile__subtitle",avatar:".profile__avatar"}),J=new r((function(e){var t=$(e);J.setItem(t)}),".photos__grid");function H(e,t){G.open(e,t)}function M(e){var t=F.getId(),n=e.isUserLiked(t)?"DELETE":"PUT";N.updateLike(e.getId(),n).then((function(n){e.updateLikes(n.likes,t)})).catch((function(e){console.log(e)}))}function z(e){X.open(e)}function $(e){return new a(e,"#photo-template",H,M,z).generateCard(F.getId())}Promise.all([N.getUserInfo(),N.getCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],u=!0,a=!1;try{for(n=n.call(e);!(u=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);u=!0);}catch(e){a=!0,o=e}finally{try{u||null==n.return||n.return()}finally{if(a)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return A(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?A(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];F.setInfo(o),J.renderItems(i)})).catch((function(e){console.log(e)})),V.addEventListener("click",(function(){Z[Q.getFormName()].resetValidation(),Q.open()})),U.addEventListener("click",(function(){var e=[],t=F.getUserInfo(),n=t.name,r=t.description;e.fullName=n,e.description=r,K.setFormValues(e),Z[K.getFormName()].resetValidation(),K.open()})),D.addEventListener("click",(function(){Z[W.getFormName()].resetValidation(),W.open()}));var G=new b(".popup__image",".popup__caption",".popup_type_preview");G.setEventListeners();var K=new L((function(e){K.setSavingText();var t=e.fullName,n=e.description;N.updateUserProfile({name:t,about:n}).then((function(){F.setProfile({name:e.fullName,description:e.description}),K.close()})).catch((function(e){console.log(e)})).finally((function(){K.setSubmitText()}))}),".popup_type_profile");K.setEventListeners();var Q=new L((function(e){var t=e.avatarUrl;Q.setSavingText(),N.updateAvatar(t).then((function(){F.setAvatar(t),Q.close()})).catch((function(e){console.log(e)})).finally((function(){Q.setSubmitText()}))}),".popup_type_avatar");Q.setEventListeners();var W=new L((function(e){var t=e.photoName,n=e.photoUrl;W.setSavingText(),N.addCard({name:t,link:n}).then((function(e){var t=$(e);J.addItem(t),W.close()})).catch((function(e){console.log(e)})).finally((function(){W.setSavingText()}))}),".popup_type_cards");W.setEventListeners();var X=new q((function(e){N.deleteCard(e.getId()).then((function(){e.deleteElement(),X.close()})).catch((function(e){console.log(e)}))}),".popup_type_submit");X.setEventListeners();var Y,Z={};Y={formSelector:".popup__form_validated",inputSelector:".popup__input",submitButtonSelector:".popup__submit",inactiveButtonClass:"popup__submit_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},Array.from(document.querySelectorAll(Y.formSelector)).forEach((function(e){var t=new l(e,Y),n=e.getAttribute("name");Z[n]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,